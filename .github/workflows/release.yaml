name: Release

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.next }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main

  build:
    needs: version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm
            goarm: "6"
            suffix: linux-armv6
          - goos: linux
            goarch: arm
            goarm: "7"
            suffix: linux-armv7
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build binaries
        run: |
          mkdir -p dist/${{ matrix.suffix }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} ${{ matrix.goarm && format('GOARM={0}', matrix.goarm) || '' }} make all
          cp bin/* dist/${{ matrix.suffix }}/
          cd dist && tar -czf airdancer-${{ needs.version.outputs.version }}-${{ matrix.suffix }}.tar.gz -C ${{ matrix.suffix }} .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: airdancer-${{ needs.version.outputs.version }}-${{ matrix.suffix }}
          path: dist/*.tar.gz

  release:
    needs: [version, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version.outputs.version }}
          name: Release ${{ needs.version.outputs.version }}
          generate_release_notes: true
          files: |
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  image:
    needs: [version,release]
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/image.yaml
    with:
      release-version: ${{ needs.version.outputs.version }}
